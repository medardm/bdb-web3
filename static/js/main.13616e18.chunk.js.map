{"version":3,"sources":["logo.svg","images/web3jslogo.png","blockchain-helper.js","App.js","reportWebVitals.js","index.js"],"names":["configureWeb3","provider","window","ethereum","Error","Web3","providers","HttpProvider","App","useState","web3","connectedAccounts","selectedAddress","fromAddress","toAddress","amountToSendInEther","valueInWei","valueInEther","address","contractAddress","contractABI","state","setState","_setState","name","value","prevState","onChange","event","target","className","src","logo","alt","width","height","web3logo","type","onClick","a","console","log","disabled","eth","requestAccounts","length","currentProvider","required","placeholder","getBalance","then","utils","fromWei","toWei","rows","ABI","JSON","parse","contract","Contract","sendTransaction","from","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13616e18.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.b9546dff.svg\";","export default __webpack_public_path__ + \"static/media/web3jslogo.f2bc2894.png\";","import Web3 from \"web3\";\n\nexport const configureWeb3 = (provider = null) => {\n    if (!window.ethereum && !provider) {\n        throw new Error('no ethereum provider detected')\n    }\n    return new Web3(provider?\n        new Web3.providers.HttpProvider(provider):\n            window.ethereum);\n};\n","import logo from './logo.svg';\nimport web3logo from './images/web3jslogo.png';\nimport './App.css';\nimport {useState} from \"react\";\nimport {configureWeb3} from \"./blockchain-helper\";\n\nfunction App() {\n    const [state, setState] = useState({\n        web3: null,\n        connectedAccounts: [],\n        selectedAddress: '',\n        fromAddress: '[from address]',\n        toAddress: '',\n        amountToSendInEther: '',\n        valueInWei: '',\n        valueInEther: '',\n        address: '',\n        contractAddress: '',\n        contractABI: '',\n    })\n\n    function _setState(name, value) {\n        setState(prevState => ({...prevState, [name]: value}));\n    }\n\n    function onChange(event) {\n        const {name, value} = event.target;\n        _setState(name, value);\n    }\n\n    return (\n        <>\n            <div className=\"container\">\n                <main>\n                    <div className=\"py-5 text-center\">\n                        <div>\n                            <img className=\"mx-auto mb-4\" src={logo} alt=\"\" width=\"72\" height=\"57\"/>\n                            <img className=\"mx-auto mb-4\" src={web3logo} alt=\"\" width=\"72\" height=\"57\"/>\n                        </div>\n                        <h2>Web3js Playground</h2>\n                        <p className=\"lead\">Some of functions you will encounter throughout the course, please open\n                            browser console for the results</p>\n                    </div>\n\n                    <div className=\"row g-5\">\n                        <div className=\"col-md-12\">\n                            <h4 className=\"mb-3\">Functions (open your browser console for the results)</h4>\n                            <div>\n                                <code>\n                                    [web3 initialization]\n                                    <br/>\n                                    window.web3 = configureWeb3();\n                                    <button\n                                        className={\"submit btn btn-flat btn-primary float-end \" + (!state.web3 ? '' : 'disabled')}\n                                        type=\"button\"\n                                        onClick={async () => {\n                                            // let's expose web3 to the browser\n                                            window.web3 = configureWeb3();\n                                            console.log(\"Web3 object created, type window.web3 in the console\")\n                                            console.log('===========================================================================')\n                                            _setState('web3', window.web3);\n                                        }}\n                                    >Run\n                                    </button>\n                                </code>\n                            </div>\n                            <hr/>\n                            <div>\n                                <code>\n                                    [Requests accounts access from metamask/request permission to connect to metamask account]\n                                    <br/>\n                                    window.web3.eth.requestAccounts()\n                                    <button className=\"submit btn btn-flat btn-primary float-end\"\n                                            type=\"submit\"\n                                            disabled={!state.web3}\n                                            onClick={async () => {\n                                                window.connectedAccounts = await window.web3.eth.requestAccounts();\n                                                _setState('connectedAccounts', window.connectedAccounts);\n                                                console.log(window.connectedAccounts)\n                                                console.log(\"Metamask connected\")\n                                                console.log('===========================================================================')\n                                            }}\n                                    >Run</button>\n                                </code>\n                            </div>\n                            <hr/>\n                            <div>\n                                <code>\n                                    [Shows the currently selected address, please run requestAccounts first if this returns null]\n                                    <br/>\n                                    window.web3.eth.currentProvider.selectedAddress\n                                    <button className={\"submit btn btn-flat btn-primary float-end \" + (state.connectedAccounts.length? '': 'disabled')}\n                                            type=\"button\"\n                                            onClick={() => {\n                                                window.selectedAddress = window.web3.eth.currentProvider.selectedAddress;\n                                                console.log(window.selectedAddress)\n                                                _setState('selectedAddress', window.selectedAddress);\n                                                _setState('fromAddress', window.selectedAddress);\n                                                console.log(\"Type 'selectedAddress' in the console\")\n                                                console.log('===========================================================================')\n                                            }}\n                                            disabled={!state.web3}>Run\n                                    </button>\n                                </code>\n                            </div>\n                            <hr/>\n                            <div>\n                                <form>\n                                    <code>\n                                        [get the eth balance]\n                                        <br/>\n                                        window.web3.eth.balanceOf('\n                                        <input onChange={onChange}\n                                               type=\"text\"\n                                               className=\"\"\n                                               name=\"address\"\n                                               value={state.address}\n                                               required\n                                               placeholder={\"address\"}/>\n                                        ')\n                                        <button className={\"submit btn btn-flat btn-primary float-end \" + (state.address ? '' : 'disabled')}\n                                                type=\"button\"\n                                                onClick={() => {\n                                                    window.web3.eth.getBalance(state.address).then(console.log)\n                                                    console.log(\"This is the balance in wei form, to convert to \")\n                                                    console.log('===========================================================================')\n                                                }}\n                                                disabled={!state.web3}>Run\n                                        </button>\n                                    </code>\n                                </form>\n                            </div>\n                            <hr/>\n                            <div>\n                                <form>\n                                    <code>\n                                        [converts wei to ether for it to makes sense in the real world, always pass\n                                        values as strings or BN objects]\n                                        <br/>\n                                        window.web3.utils.fromWei('\n                                        <input onChange={onChange}\n                                               type=\"text\"\n                                               className=\"\"\n                                               name=\"valueInWei\"\n                                               value={state.valueInWei}\n                                               required\n                                               placeholder={\"value in wei\"}/>\n                                        ')\n                                        <button className={\"submit btn btn-flat btn-primary float-end \" + (state.valueInWei ? '': 'disabled')}\n                                                type=\"button\"\n                                                onClick={() => {\n                                                    console.log(\"This is the value in ether\")\n                                                    console.log(window.web3.utils.fromWei(state.valueInWei))\n                                                    console.log('===========================================================================')\n                                                }}\n                                                disabled={!state.web3}>Run\n                                        </button>\n                                    </code>\n                                </form>\n                            </div>\n                            <hr/>\n                            <div>\n                                <form>\n                                    <code>\n                                        [converts ether to wei for it to makes sense in the blockchain]\n                                        <br/>\n                                        window.web3.utils.toWei('\n                                        <input onChange={onChange}\n                                               type=\"text\"\n                                               className=\"\"\n                                               name=\"valueInEther\"\n                                               value={state.valueInEther}\n                                               required\n                                               placeholder={\"value in ether\"}/>\n                                        ')\n                                        <button className={\"submit btn btn-flat btn-primary float-end \" + (state.valueInEther? '' : 'disabled')}\n                                                type=\"button\"\n                                                onClick={() => {\n                                                    console.log(\"This is the value in wei\")\n                                                    console.log(window.web3.utils.toWei(state.valueInEther))\n                                                    console.log('===========================================================================')\n                                                }}\n                                                disabled={!state.web3}>Run\n                                        </button>\n                                    </code>\n                                </form>\n                            </div>\n                            <hr/>\n                            <div>\n                                <code>\n                                    [All the utilities from web3 object]\n                                    <br/>\n                                    web3.utils\n                                    <button className=\"submit btn btn-flat btn-primary float-end\"\n                                            type=\"button\"\n                                            onClick={() => {\n                                                console.log(window.web3.utils)\n                                                console.log('Type web3.utils in the console')\n                                                console.log('===========================================================================')\n                                            }}\n                                            disabled={!state.web3}>Run\n                                    </button>\n                                </code>\n                            </div>\n                            <hr/>\n                            <form>\n                                <code>\n                                    [initializing a smart contract]\n                                    <br/>\n                                    window.contract = new web3.eth.Contract(\n                                    '<textarea name=\"contractABI\"\n                                               className={'align-middle'}\n                                               rows={1}\n                                               onChange={onChange}\n                                               placeholder={'contract ABI'}\n                                               value={state.contractABI}>\n                                    </textarea>',\n                                    '<input onChange={onChange}\n                                            type=\"text\"\n                                            className=\"\"\n                                            name=\"contractAddress\"\n                                            value={state.contractAddress}\n                                            required\n                                            placeholder={\"contract address\"}/>'\n                                    )\n                                    <button className={\"submit btn btn-flat btn-primary float-end \" + (state.contractABI && state.contractAddress? '': 'disabled')}\n                                            type=\"button\"\n                                            onClick={() => {\n                                                const ABI = JSON.parse(state.contractABI);\n                                                const contract = new window.web3.eth.Contract(ABI, state.contractAddress)\n                                                window.contract = contract\n                                                console.log(contract);\n                                                console.log(\"Contract object has been created, type 'contract' in the console to access\")\n                                                console.log('===========================================================================')\n                                            }}\n                                            disabled={!state.web3}>Run\n                                    </button>\n                                </code>\n                            </form>\n                            <hr/>\n                            <form>\n                                <code>\n                                    [sending a transaction from metamask, click run on window.web3.eth.currentProvider.selectedAddress first, it will set the fromAddress]\n                                    <br/>\n                                    window.web3.eth.sendTransaction(\n                                    '{state.fromAddress}',\n                                    '<input onChange={onChange}\n                                            type=\"text\"\n                                            className=\"\"\n                                            name=\"toAddress\"\n                                            value={state.toAddress}\n                                            required\n                                            placeholder={\"enter recipient address\"}/>',\n                                    '<input onChange={onChange}\n                                            type=\"text\"\n                                            className=\"\"\n                                            name=\"amountToSendInEther\"\n                                            value={state.amountToSendInEther}\n                                            required\n                                            placeholder={\"enter amount to send in ether\"}/>'\n,                                    )\n                                    <button className={\"submit btn btn-flat btn-primary float-end \" + (state.fromAddress && state.toAddress && state.amountToSendInEther? '': 'disabled')}\n                                            type=\"button\"\n                                            onClick={() => {\n                                                window.web3.eth.sendTransaction({\n                                                    from: state.fromAddress,\n                                                    to: state.toAddress,\n                                                    value: window.web3.utils.toWei(state.amountToSendInEther),\n                                                }).then(console.log);\n\n                                                console.log(\"Contract object has been created, type 'contract' in the console to access\")\n                                                console.log('===========================================================================')\n                                            }}\n                                            disabled={!state.web3}>Run\n                                    </button>\n                                </code>\n                            </form>\n                            <hr/>\n                        </div>\n                    </div>\n                </main>\n            </div>\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}