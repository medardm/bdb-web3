{"version":3,"sources":["images/logo.svg","images/web3jslogo.png","images/configureWeb3Code.png","App.js","reportWebVitals.js","index.js"],"names":["App","useState","web3","connectedAccounts","selectedAddress","fromAddress","toAddress","amountToSendInEther","valueInWei","valueInEther","address","contractAddress","contractABI","setState","onChange","event","target","name","value","prevState","_setState","className","type","required","placeholder","rows","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.156e05e6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.b9546dff.svg\";","export default __webpack_public_path__ + \"static/media/web3jslogo.f2bc2894.png\";","export default __webpack_public_path__ + \"static/media/configureWeb3Code.0cc46ab9.png\";","import logo from './images/logo.svg';\nimport web3logo from './images/web3jslogo.png';\nimport configureWeb3Code from './images/configureWeb3Code.png';\nimport './App.css';\nimport {useState} from \"react\";\nimport {configureWeb3} from \"./blockchain-helper\";\n\nfunction App() {\n    const [state, setState] = useState({\n        web3: null,\n        connectedAccounts: [],\n        selectedAddress: '',\n        fromAddress: '[from address]',\n        toAddress: '',\n        amountToSendInEther: '',\n        valueInWei: '',\n        valueInEther: '',\n        address: '',\n        contractAddress: '',\n        contractABI: '',\n    })\n\n    function _setState(name, value) {\n        setState(prevState => ({...prevState, [name]: value}));\n    }\n\n    function onChange(event) {\n        const {name, value} = event.target;\n        _setState(name, value);\n    }\n\n    return (\n        <>\n            <div className=\"container\">\n                <main>\n                    <div className=\"py-5 text-center\">\n                        <h2>Web3js Playground</h2>\n                        <p className=\"lead\">Some of functions you will encounter throughout the course, please open\n                            browser console for the results</p>\n                    </div>\n\n                    <div className=\"row g-5\">\n                        <div className=\"col-md-12\">\n                            <h4 className=\"mb-3\">Functions (open your browser console for the results)</h4>\n                            <div>\n                                <code>\n                                    [Initialize Web3, before anything else, let's use a custom function for this one]\n                                    <br/>\n                                    window.web3 = configureWeb3();\n                                    <br/>\n                                    <button\n                                        className={\"submit btn btn-flat btn-primary float-end \"}\n                                        type=\"button\"\n                                    >Run\n                                    </button>\n                                </code>\n                            </div>\n                            <hr/>\n                            <div>\n                                <code>\n                                    [Requests accounts access from metamask/request permission to connect to metamask account]\n                                    <br/>\n                                    window.web3.eth.requestAccounts()\n                                    <button className=\"submit btn btn-flat btn-primary float-end\"\n                                            type=\"submit\">\n                                        Run\n                                    </button>\n                                </code>\n                            </div>\n                            <hr/>\n                            <div>\n                                <code>\n                                    [Shows the currently selected address, please run requestAccounts first if this returns null]\n                                    <br/>\n                                    window.web3.eth.currentProvider.selectedAddress\n                                    <button className={\"submit btn btn-flat btn-primary float-end \"}\n                                            type=\"button\">\n                                        Run\n                                    </button>\n                                </code>\n                            </div>\n                            <hr/>\n                            <div>\n                                <form>\n                                    <code>\n                                        [get the eth balance]\n                                        <br/>\n                                        window.web3.eth.balanceOf('\n                                        <input onChange={onChange}\n                                               type=\"text\"\n                                               className=\"\"\n                                               name=\"address\"\n                                               value={''}\n                                               required\n                                               placeholder={\"address\"}/>\n                                        ')\n                                        <button className={\"submit btn btn-flat btn-primary float-end \" }\n                                                type=\"button\">\n                                            Run\n                                        </button>\n                                    </code>\n                                </form>\n                            </div>\n                            <hr/>\n                            <div>\n                                <form>\n                                    <code>\n                                        [converts wei to ether for it to makes sense in the real world, always pass\n                                        values as strings or BN objects]\n                                        <br/>\n                                        window.web3.utils.fromWei('\n                                        <input onChange={onChange}\n                                               type=\"text\"\n                                               className=\"\"\n                                               name=\"valueInWei\"\n                                               value={''}\n                                               required\n                                               placeholder={\"value in wei\"}/>\n                                        ')\n                                        <button className={\"submit btn btn-flat btn-primary float-end \"}\n                                                type=\"button\">\n                                            Run\n                                        </button>\n                                    </code>\n                                </form>\n                            </div>\n                            <hr/>\n                            <div>\n                                <form>\n                                    <code>\n                                        [converts ether to wei for it to makes sense in the blockchain]\n                                        <br/>\n                                        window.web3.utils.toWei('\n                                        <input onChange={onChange}\n                                               type=\"text\"\n                                               className=\"\"\n                                               name=\"valueInEther\"\n                                               value={''}\n                                               required\n                                               placeholder={\"value in ether\"}/>\n                                        ')\n                                        <button className={\"submit btn btn-flat btn-primary float-end \"}\n                                                type=\"button\">\n                                            Run\n                                        </button>\n                                    </code>\n                                </form>\n                            </div>\n                            <hr/>\n                            <div>\n                                <code>\n                                    [All the utilities from web3 object]\n                                    <br/>\n                                    web3.utils\n                                    <button className=\"submit btn btn-flat btn-primary float-end\"\n                                            type=\"button\">\n                                        Run\n                                    </button>\n                                </code>\n                            </div>\n                            <hr/>\n                            <div>\n                                <form>\n                                    <code>\n                                        [initializing a smart contract]\n                                        <br/>\n                                        window.contract = new web3.eth.Contract(\n                                        '<textarea name=\"contractABI\"\n                                                   className={'align-middle'}\n                                                   rows={1}\n                                                   onChange={onChange}\n                                                   placeholder={'contract ABI'}\n                                                   value={''}>\n                                    </textarea>',\n                                        '<input onChange={onChange}\n                                                type=\"text\"\n                                                className=\"\"\n                                                name=\"contractAddress\"\n                                                value={''}\n                                                required\n                                                placeholder={\"contract address\"}/>'\n                                        )\n                                        <button className={\"submit btn btn-flat btn-primary float-end \"}\n                                                type=\"button\">\n                                            Run\n                                        </button>\n                                    </code>\n                                </form>\n                                <hr/>\n                            </div>\n                            <div>\n                                <form>\n                                    <code>\n                                        [sending a transaction from metamask, click run on window.web3.eth.currentProvider.selectedAddress first, it will set the fromAddress]\n                                        <br/>\n                                        window.web3.eth.sendTransaction(\n                                        'fromAddress',\n                                        '<input onChange={onChange}\n                                                type=\"text\"\n                                                className=\"\"\n                                                name=\"toAddress\"\n                                                value={''}\n                                                required\n                                                placeholder={\"enter recipient address\"}/>',\n                                        '<input onChange={onChange}\n                                                type=\"text\"\n                                                className=\"\"\n                                                name=\"amountToSendInEther\"\n                                                value={''}\n                                                required\n                                                placeholder={\"enter amount to send in ether\"}/>'\n                                        ,                                    )\n                                        <button className={\"submit btn btn-flat btn-primary float-end \"}\n                                                type=\"button\">\n                                            Run\n                                        </button>\n                                    </code>\n                                </form>\n                                <hr/>\n                            </div>\n                        </div>\n                    </div>\n                </main>\n            </div>\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}